apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.example.android.roomwordssample"
        minSdkVersion 20
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
//
//    // Dependencies for working with Architecture components
//    // You'll probably have to update the version numbers in build.gradle (Project)
//
//    // Room components
//    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
//    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
//    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"
//
//    // Lifecycle components
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
//
//    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
//
//
//    // Kotlin components
//
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
//
//    // UI
//    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
//    implementation "com.google.android.material:material:$rootProject.materialVersion"
//
//    // Testing
//    testImplementation "junit:junit:$rootProject.junitVersion"
//    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
//    androidTestImplementation ("androidx.test.espresso:espresso-core:$rootProject.espressoVersion", {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
//
//    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
//
//    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "androidx.appcompat:appcompat:$supportLibVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.google.android.material:material:$materialVersion"

    // architecture components
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"



}

